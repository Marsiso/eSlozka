@attribute [Route(Routes.Authentication.Register)]
@attribute [AllowAnonymous]
@using static Domain.Enums.Translations.Register
@using eSlozka.Domain.Constants
@inherits PageComponentBase<RegisterViewModel>

@inject IStringLocalizer Localizer

<MudBreakpointProvider>
    <MudHidden Breakpoint="Breakpoint.Xs" IsHiddenChanged="hidden => Model.HasMobileDeviceViewPortWidth = hidden">
    </MudHidden>
</MudBreakpointProvider>

<MudCard Class="pa-8" Style="@Model.GetComponentWidth()">
    <MudForm Model="Model.Form">
        <MudCardHeader>
            <MudText Color="Color.Surface" Typo="Typo.h5">@Localizer[Title]</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudTextField @bind-Value="Model.Form.GivenName"
                          For="@(() => Model.Form.GivenName)"
                          Immediate="true"
                          InputType="InputType.Text"
                          Label="@Localizer[GivenNameInput.Label]"
                          MaxLength="256"
                          Placeholder="@Localizer[GivenNameInput.Placeholder]"
                          DebounceInterval="500"
                          Error="@Model.HasError(nameof(Model.Form.GivenName))"
                          ErrorText="@Localizer[Model.GetErrorText(nameof(Model.Form.GivenName))]"/>

            <MudTextField @bind-Value="Model.Form.FamilyName"
                          For="@(() => Model.Form.FamilyName)"
                          Immediate="true"
                          InputType="InputType.Text"
                          Label="@Localizer[FamilyNameInput.Label]"
                          MaxLength="256"
                          Placeholder="@Localizer[FamilyNameInput.Placeholder]"
                          DebounceInterval="500"
                          Error="@Model.HasError(nameof(Model.Form.FamilyName))"
                          ErrorText="@Localizer[Model.GetErrorText(nameof(Model.Form.FamilyName))]"/>

            <MudTextField @bind-Value="Model.Form.Email"
                          For="@(() => Model.Form.Email)"
                          Immediate="true"
                          InputType="InputType.Email"
                          Label="@Localizer[EmailInput.Label]"
                          MaxLength="256"
                          Placeholder="@Localizer[EmailInput.Placeholder]"
                          DebounceInterval="500"
                          Error="@Model.HasError(nameof(Model.Form.Email))"
                          ErrorText="@Localizer[Model.GetErrorText(nameof(Model.Form.Email))]"/>

            <MudTextField Adornment="Adornment.End"
                          AdornmentAriaLabel="@Localizer[PasswordInput.AdornmentAriaLabel]"
                          AdornmentIcon="@Model.PasswordInputIcon"
                          @bind-Value="Model.Form.Password"
                          For="@(() => Model.Form.Password)"
                          Immediate="true"
                          InputType="@Model.PasswordInputType"
                          Label="@Localizer[PasswordInput.Label]"
                          MaxLength="256"
                          OnAdornmentClick="@Model.OnPasswordInputShowPasswordClick"
                          DebounceInterval="500"
                          Error="@Model.HasError(nameof(Model.Form.Password))"
                          ErrorText="@Localizer[Model.GetErrorText(nameof(Model.Form.Password))]"/>

            <MudTextField Adornment="Adornment.End"
                          AdornmentAriaLabel="@Localizer[PasswordRepeatInput.AdornmentAriaLabel]"
                          AdornmentIcon="@Model.PasswordInputIcon"
                          @bind-Value="Model.Form.PasswordRepeat"
                          For="@(() => Model.Form.PasswordRepeat)"
                          Immediate="true"
                          InputType="@Model.PasswordRepeatInputType"
                          Label="@Localizer[PasswordRepeatInput.Label]"
                          MaxLength="256"
                          OnAdornmentClick="@Model.OnPasswordRepeatInputShowPasswordClick"
                          DebounceInterval="500"
                          Error="@Model.HasError(nameof(Model.Form.PasswordRepeat))"
                          ErrorText="@Localizer[Model.GetErrorText(nameof(Model.Form.PasswordRepeat))]"/>
        </MudCardContent>
        <MudCardActions>
            <MudStack Class="flex flex-grow-1" Justify="Justify.FlexEnd" Row="true">
                <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" OnClick="@Model.OnRegisterButtonClick">@Localizer[RegisterButton.Text]</MudButton>
                <MudButton ButtonType="ButtonType.Button" Variant="Variant.Text" OnClick="@Model.OnLoginButtonClick">@Localizer[LoginButton.Text]</MudButton>
            </MudStack>
        </MudCardActions>
    </MudForm>
</MudCard>
